{"version":3,"sources":["redux/phonebook/contacts-actions.js","redux/phonebook/contacts-reducers.js","redux/phonebook/contacts-operations.js","redux/phonebook/contacts-selectors.js","redux/loader-reducer.js","redux/error-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ListItem/ListItem.js","components/ContactsList/ContactsList.js","components/App.js","index.js"],"names":["changeFilter","createAction","addContactRequest","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","actions","items","createReducer","state","payload","filter","id","_","contactsReducer","combineReducers","axios","defaults","baseURL","contact","dispatch","post","then","data","catch","error","get","contactId","delete","getFilter","contacts","getAllContacts","getLoading","loader","getError","getFilteredContacts","createSelector","allContacts","normalizedFilter","toLowerCase","length","name","includes","contactsActions","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","INITIAL_STATE","number","ContactForm","handleInput","e","stateField","target","setState","value","isNameExist","normalizedName","find","createContact","uuid","handleSubmit","preventDefault","props","addContact","alert","clearInput","this","onSubmit","className","type","onChange","pattern","title","required","Component","connect","contactsSelectors","contactsOperations","ListItem","deleteContact","onClick","ContactsList","fetchContacts","isLoadingContacts","isError","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4526058a.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n// Filter contacts\nconst changeFilter = createAction('contacts/changeFilter');\n\n// Add contacts\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\n// Fetch contacts\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\n// Delete contacts\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nexport default {\n  changeFilter,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst {\n  changeFilter,\n  addContactSuccess,\n  fetchContactsSuccess,\n  deleteContactSuccess,\n} = actions;\n\nconst items = createReducer([], {\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items,\n  filter,\n});\n","import axios from 'axios';\nimport actions from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\nconst addContact = contact => dispatch => {\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error)));\n};\n\nconst fetchContacts = () => dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactsError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\n    .catch(error => dispatch(actions.deleteContactError(error)));\n};\n\nexport default {\n  addContact,\n  fetchContacts,\n  deleteContact,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.loader;\n\nconst getError = state => state.error;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getAllContacts = state => state.contacts.items;\n\nconst getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    if (allContacts.length > 0) {\n      return allContacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter),\n      );\n    } else {\n      return allContacts;\n    }\n  },\n);\n\nexport default {\n  getLoading,\n  getError,\n  getFilter,\n  getAllContacts,\n  getFilteredContacts,\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { contactsActions } from './phonebook';\n\nconst {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} = contactsActions;\n\nexport const loader = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { contactsActions } from './phonebook';\n\nconst {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} = contactsActions;\n\nexport const error = createReducer(null, {\n  [addContactRequest]: () => null,\n  [addContactSuccess]: () => null,\n  [addContactError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n  [fetchContactsSuccess]: () => null,\n  [fetchContactsError]: (_, { payload }) => payload,\n  [deleteContactRequest]: () => null,\n  [deleteContactSuccess]: () => null,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  // combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { contactsReducer } from './phonebook/contacts-reducers';\nimport { loader } from './loader-reducer';\nimport { error } from './error-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    error,\n    loader,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport PropTypes from 'prop-types';\nimport './ContactForm.scss';\nimport { contactsOperations, contactsSelectors } from '../../redux/phonebook';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  handleInput = e => {\n    const stateField = e.target.name;\n    this.setState({ [stateField]: e.target.value });\n  };\n\n  isNameExist = (contacts, name) => {\n    const normalizedName = name.toLowerCase();\n    return contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName,\n    );\n  };\n\n  createContact = (name, number) => {\n    return {\n      id: uuid(),\n      name,\n      number,\n    };\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { allContacts, addContact } = this.props;\n    const { name, number } = this.state;\n\n    if (!name || !number) {\n      alert(`Complete the form please`);\n      return;\n    }\n\n    if (!this.isNameExist(allContacts, name)) {\n      const contact = this.createContact(name, number);\n      addContact(contact);\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n\n    this.clearInput();\n  };\n\n  clearInput = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleInput, handleSubmit } = this;\n\n    return (\n      <form onSubmit={handleSubmit} className=\"ContactForm\">\n        <label>\n          <p className=\"ContactForm__label\">Name</p>\n          <input\n            className=\"ContactForm__text-input\"\n            type=\"text\"\n            value={name}\n            onChange={handleInput}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>{' '}\n        <label>\n          <p className=\"ContactForm__label\">Number</p>\n          <input\n            className=\"ContactForm__text-input\"\n            type=\"tel\"\n            value={number}\n            onChange={handleInput}\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <div className=\"ContactForm__btnWrapper\">\n          <button className=\"ContactForm__btn\" type=\"submit\">\n            Add contact\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  allContacts: contactsSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: contact => dispatch(contactsOperations.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Filter.scss';\nimport { contactsSelectors, contactsActions } from '../../redux/phonebook';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      <p>Find contacts by name</p>\n      <input\n        className=\"Filter__input\"\n        type=\"text\"\n        onChange={onChange}\n        name=\"filter\"\n        value={value}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ListItem.scss';\n\nconst ListItem = ({ contact, deleteContact }) => {\n  const { id, name, number } = contact;\n  return (\n    <li className=\"ListItem\">\n      <span>\n        {name}: {number}\n      </span>\n      <button\n        className=\"ListItem__button\"\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ListItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ListItem from './ListItem';\nimport PropTypes from 'prop-types';\nimport './ContactsList.scss';\nimport { contactsOperations, contactsSelectors } from '../../redux/phonebook';\n\nclass ContactsList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, deleteContact, isLoadingContacts, isError } = this.props;\n\n    return (\n      <>\n        <ul className=\"ContactsList\">\n          {contacts.map(contact => (\n            <ListItem\n              key={contact.id}\n              contact={contact}\n              deleteContact={deleteContact}\n            />\n          ))}\n        </ul>\n        {isLoadingContacts && <h1>Loading ...</h1>}\n        {isError && <h1>Something went wrong ...</h1>}\n      </>\n    );\n  }\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getFilteredContacts(state),\n  isLoadingContacts: contactsSelectors.getLoading(state),\n  isError: contactsSelectors.getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React from 'react';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactsList from './ContactsList';\n\nconst App = () => (\n  <div>\n    <h1>Phonebook</h1>\n    <ContactForm />\n    <Filter />\n    <h2>Contacts</h2>\n    <ContactsList />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}